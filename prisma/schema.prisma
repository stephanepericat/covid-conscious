generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi", "relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  role      Role     @default(USER)
  active    Boolean   @default(true)
  comments  Comment[]
  posts     Post[]
  profile   Profile?
  reviews   Review[]
}

model Profile {
  id      Int     @id @default(autoincrement())
  name    String?
  bio     String?
  website String?
  user    User    @relation(fields: [userId], references: [id])
  userId  Int     @unique
}

model Post {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  title       String
  content     String?
  published   Boolean    @default(true)
  author      User?      @relation(fields: [authorId], references: [id])
  authorId    Int?
  categories  Category[]
  comments    Comment[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]
}

model Comment {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  content     String
  post        Post      @relation(fields: [postId], references: [id])
  postId      Int
  published   Boolean   @default(true)
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int
}

model Review {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  content     String
  rating      Int
  productId   String    @db.Uuid
  published   Boolean   @default(true)
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int
}

enum Role {
  USER
  ADMIN
}